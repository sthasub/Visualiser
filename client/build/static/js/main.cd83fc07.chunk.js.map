{"version":3,"sources":["utils/API.js","components/Nav/index.jsx","components/Table/index.jsx","components/TableContainer/index.jsx","components/PieChart/index.jsx","components/LineGraph/index.jsx","components/BarGraph/index.jsx","components/List/index.jsx","components/DateSelector/index.jsx","components/Main/index.jsx","pages/Dashboard.js","components/Form/index.jsx","pages/Login.js","pages/AddPatientInfo.js","pages/Registration.js","reducer/UseReducer.js","App.js","index.js"],"names":["axios","get","withCredentials","patientData","userToken","put","staffData","post","loginData","Nav","useContext","UserContext","state","dispatch","location","useLocation","useState","username","setUsername","useEffect","token","localStorage","getItem","type","payload","API","then","res","data","name","catch","err","console","log","className","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","icon","faUser","to","pathname","title","faFileMedical","onClick","e","preventDefault","status","removeItem","window","faSignOutAlt","faSignInAlt","faUserPlus","Table","sort","scope","map","patient","index","diseaseName","patientName","stateName","gender","birthYear","Container","patients","setPatients","search","setSearch","setSort","creationOfNewObject","allData","pats","d","push","p","dateFormatter","rows","date","getDate","split","Date","parseInt","getFullYear","toString","patientsData","concat","formatAllData","formatedData","value","onChange","target","placeholder","faSearch","sortArg","sorted","item1","item2","filter","row","toLowerCase","includes","PieChart","males","females","diagnosis","diseases","disease","toUpperCase","male","female","getGender","length","setTimeout","c3","generate","bindto","columns","LineGraph","years","yearsObj","forEach","item","occurance","distinctYear","year","getPatientInfoWithDisease","axis","x","categories","label","y","BarGraph","vic","sa","nt","nsw","wa","tas","act","VIC","SA","NT","NSW","WA","ACT","TAS","labels","bar","space","width","ratio","List","handler","setDiseaseName","putArray","getDisease","DateSelector","dateHandler","setSelectDate","currentYear","setYear","now","todayDate","dateArray","getYear","getMonth","indexOf","entryDate","getTodayDate","Main","setdiseaseName","TableContainer","Dashboard","Form","submitForm","formType","firstname","setFirstName","lastname","setLastName","setGender","dob","setDob","region","setRegion","setDiagnosis","staffId","setStaffId","password","setPassword","cpassword","setCpassword","email","setEmail","errorEmail","setErrorEmail","inputHandler","args","isPatientFormFilled","isLoginFormFilled","isSignupFormFilled","allValue","parse","getData","onSubmit","htmlFor","autoComplete","aria-describedby","selected","isClearable","dateFormat","placeholderText","checked","disabled","userLoginObj","userObj","style","color","Login","history","useHistory","setValue","val","setItem","response","textAlign","marginTop","AddPatientInfo","setData","callAddPateintPage","a","Error","Registration","initialState","reducer","action","createContext","App","useReducer","Provider","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd83fc07.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n    getData:function(){\r\n        return axios.get(\"/user\");\r\n    },\r\n    getAddPatient:function(){\r\n        return axios.get(\"/user/userData\", { withCredentials: true } );\r\n    },\r\n    getPatientData:function(){\r\n        return axios.get(\"/patient\");\r\n    },\r\n    getDiagnosis:function(){\r\n        return axios.get(\"/diagnosis\");\r\n    },\r\n    savePatientInfo:function(patientData, userToken){\r\n        return axios.put(`/user/patient/${userToken}`, patientData);\r\n    },\r\n    saveStaffInfo:function(staffData){\r\n        return axios.post(\"/user/signup\",staffData);\r\n    },\r\n    signIn:function(loginData){\r\n        return axios.post(\"/user/login\",loginData);\r\n    },\r\n    userDetail:function(){\r\n        return axios.get(\"/user/userData\");\r\n    },\r\n    signOut:function(){\r\n        return axios.get(\"/user/logout\");\r\n    }\r\n};","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\nimport API from \"../../utils/API\";\r\nimport \"./style.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSignOutAlt,\r\n  faUser,\r\n  faFileMedical,\r\n  faSignInAlt,\r\n  faUserPlus\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nconst Nav = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const location = useLocation();\r\n  const [username, setUsername] = useState(\"\");\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    dispatch({ type: \"USER\", payload: token });\r\n    if (token) {\r\n      API.userDetail()\r\n        .then((res) => {\r\n          setUsername(res.data.name);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.data);\r\n        });\r\n    }\r\n  }, [localStorage.getItem(\"token\")]);\r\n\r\n  const logoutHandler = (e) => {\r\n    e.preventDefault();\r\n    API.signOut().then((res) => {\r\n      if (res.status === 200) {\r\n        localStorage.removeItem(\"token\");\r\n        window.location.href = \"/\";\r\n      }\r\n    });\r\n  };\r\n\r\n  if (state.token) {\r\n    return (\r\n      <div>\r\n        <div className=\"bg-primary\">\r\n          <nav className=\"col-10 mx-auto navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n              VISUALISER           \r\n            </a>\r\n            <div className=\"container-fluid\">\r\n              <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#navbarSupportedContent\"\r\n                aria-controls=\"navbarSupportedContent\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n              >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div\r\n                className=\"collapse navbar-collapse\"\r\n                id=\"navbarSupportedContent\"\r\n              >\r\n                <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\r\n                  <li className=\"nav-item\">\r\n                    <p id=\"userName\">\r\n                      <FontAwesomeIcon icon={faUser} /> {username}\r\n                    </p>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink\r\n                      to=\"/addInformation\"\r\n                      className={\r\n                        location.pathname === \"/addInformation\" ||\r\n                        location.pathname === \"/login\" ||\r\n                        location.pathname === \"/registration\"\r\n                          ? \"hidden\"\r\n                          : \"\"\r\n                      }\r\n                    >\r\n                      <button\r\n                        className=\"btn btn-info\"\r\n                        title=\"add Patient information\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faFileMedical} /> Patient\r\n                      </button>\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink\r\n                      to=\"/\"\r\n                      className={location.pathname === \"/\" ? \"hidden\" : \"\"}\r\n                    >\r\n                      <button className=\"btn btn-outline-warning\">Back</button>\r\n                    </NavLink>\r\n                  </li>\r\n                  <li>\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={logoutHandler}\r\n                      title=\"sign out\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faSignOutAlt} />\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div className=\"bg-primary\">\r\n          <nav className=\"col-10 mx-auto navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n              VISUALISER\r\n            </a>\r\n            <div className=\"container-fluid\">\r\n              <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#navbarSupportedContent\"\r\n                aria-controls=\"navbarSupportedContent\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n              >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div\r\n                className=\"collapse navbar-collapse\"\r\n                id=\"navbarSupportedContent\"\r\n              >\r\n                <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\r\n                  <li className=\"nav-item\">\r\n                    <NavLink\r\n                      to=\"/login\"\r\n                      className={location.pathname === \"/login\" ? \"hidden\" : \"\"}\r\n                    >\r\n                      <button\r\n                        className=\"btn btn-success\"\r\n                        onClick={() => {}}\r\n                        title=\"sign in\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faSignInAlt} />\r\n                      </button>\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink\r\n                      to=\"/registration\"\r\n                      className={\r\n                        location.pathname === \"/registration\" ? \"hidden\" : \"\"\r\n                      }\r\n                    >\r\n                      <button\r\n                        className=\"btn btn-light\"\r\n                        onClick={() => {}}\r\n                        title=\"sign up\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faUserPlus} /> sign up\r\n                      </button>\r\n                    </NavLink>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                    <NavLink\r\n                      to=\"/addInformation\"\r\n                      className={\r\n                        location.pathname === \"/addInformation\" ||\r\n                        location.pathname === \"/login\" ||\r\n                        location.pathname === \"/registration\"\r\n                          ? \"hidden\"\r\n                          : \"\"\r\n                      }\r\n                    >\r\n                      <button\r\n                        className=\"btn btn-info\"\r\n                        title=\"add patient information\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faFileMedical} /> Patient\r\n                      </button>\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink\r\n                      to=\"/\"\r\n                      className={location.pathname === \"/\" ? \"hidden\" : \"\"}\r\n                    >\r\n                      <button className=\"btn btn-outline-warning\">Back</button>\r\n                    </NavLink>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nfunction Table({ patientData, sort }) {\r\n  return (\r\n    <table className=\"table table-hover\">\r\n        <caption>List of Patients</caption>\r\n      <thead className=\"table-active\">\r\n        <tr>\r\n          <th scope=\"col\">\r\n            <span onClick={() => sort(\"diseaseName\")}>Disease Name</span>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <span onClick={() => sort(\"patientName\")}>Patient Name</span>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <span onClick={() => sort(\"stateName\")}>State</span>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <span onClick={() => sort(\"gender\")}>gender</span>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <span onClick={() => sort(\"birthYear\")}>Birth Year</span>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {patientData.map((patient, index) => (\r\n          <tr key={index}>\r\n            <td>{patient.diseaseName}</td>\r\n            <td>{patient.patientName}</td>\r\n            <td>{patient.stateName}</td>\r\n            <td>{patient.gender}</td>\r\n            <td>{patient.birthYear}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useEffect, useState } from \"react\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\nimport Table from \"../Table\";\n\nconst Container = () => {\n  const [patients, setPatients] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState(true);\n\n  const formatAllData = (allData) => {\n    const patientsData = creationOfNewObject(allData);\n    return [].concat(...patientsData);\n  };\n\n  const creationOfNewObject = (allData) => {\n    let pats = [];\n    allData.map((d) => {\n      pats.push(\n        d.patients.map((p) => ({\n          diseaseName: d.name,\n          patientName: p.name,\n          birthYear: dateFormatter(p.birthYear),\n          gender: p.gender,\n          stateName: p.state,\n        }))\n      );\n    });\n    return pats;\n  };\n\n  function sorting(sortArg) {\n    let sorted = \"\";\n    if (sort) {\n      sorted = patients.sort(function (item1, item2) {\n        if (item1[sortArg] < item2[sortArg]) {\n          return -1;\n        }\n        if (item1[sortArg] > item2[sortArg]) {\n          return 1;\n        }\n        return 0;\n      });\n      setSort(false);\n    } else {\n      sorted = patients.sort(function (item1, item2) {\n        if (item1[sortArg] < item2[sortArg]) {\n          return 1;\n        }\n        if (item1[sortArg] > item2[sortArg]) {\n          return -1;\n        }\n        return 0;\n      });\n      setSort(true);\n    }\n    setPatients([...sorted]);\n  }\n\n  const dateFormatter = (date) => {\n    const getDate = date.split(\"/\");\n    const d = new Date(parseInt(getDate[2]),parseInt(getDate[1])-1,parseInt(getDate[0]));\n    return d.getFullYear().toString();\n  };\n\n  useEffect(() => {\n    API.getDiagnosis()\n      .then((res) => {\n        return formatAllData(res.data);\n      })\n      .then((formatedData) => {\n        setPatients(formatedData);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  function searchName(rows) {\n    return rows.filter(\n      (row) =>\n        row.patientName.toLowerCase().includes(search.toLowerCase()) ||\n        row.diseaseName.toLowerCase().includes(search.toLowerCase()) ||\n        row.gender.toLowerCase().includes(search.toLowerCase()) ||\n        row.stateName.toLowerCase().includes(search.toLowerCase()) ||\n        row.birthYear.includes(search)\n    );\n  }\n\n  return (\n    <div>\n      <br/>\n      \n      <input\n          id=\"search\"\n          type=\"text\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          placeholder=\"search here\"\n        />\n        <FontAwesomeIcon icon={faSearch}/>\n        <br/>\n        <br/>\n        <Table sort={sorting} patientData={searchName(patients)} />\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { useEffect } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport c3 from \"c3\";\r\n\r\nconst PieChart = ({diseaseName}) => {\r\n  const males = [\"male\"];\r\n  const females = [\"female\"];\r\n  // const [Users, setUsers] = useState([]);\r\n  function getGender(diagnosis) {\r\n    // if (users.length === 0) return [[], []]; // loads the empty arrays\r\n    // diagnosis.forEach(diagnosis => {\r\n    //   diagnosis.patients.forEach(patient=>{\r\n    //     let da = new Date(patient.date);\r\n    //     console.log(da.getFullYear().toString());\r\n    //   });\r\n    // });\r\n\r\n    const diseases = diagnosis.filter(\r\n      (disease) => disease.name.toUpperCase() === diseaseName.toUpperCase()\r\n    );\r\n\r\n    let male = \"\";\r\n    let female = \"\";\r\n    diseases.map((d) => {\r\n      male = d.patients.filter((p) => p.gender === \"Male\");\r\n      female = d.patients.filter((p) => p.gender === \"Female\");\r\n    });\r\n    return [male, female];\r\n  }\r\n\r\n  useEffect(() => {\r\n    API.getDiagnosis()\r\n      .then((res) => {\r\n        // setUsers(res.data);\r\n        let [male, female] = getGender(res.data);\r\n        males.push(male.length);\r\n        females.push(female.length);\r\n        setTimeout(()=>{\r\n          c3.generate({\r\n            bindto: \"#pie\",\r\n            data: {\r\n              columns: [males, females],\r\n              type: \"pie\",\r\n            },\r\n          });\r\n        },500);\r\n        \r\n      }\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }, [diseaseName]);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"pie\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React, { useEffect } from \"react\";\r\nimport c3 from \"c3\";\r\nimport API from \"../../utils/API\";\r\nconst LineGraph = ({ diseaseName }) => {\r\n  \r\n  function getPatientInfoWithDisease(diagnosis) {\r\n    const diseases = diagnosis.filter(\r\n      (disease) => disease.name.toUpperCase() === diseaseName.toUpperCase()\r\n    );\r\n    let years = [];\r\n    diseases.map((d) => {\r\n      d.patients.map((p) => {\r\n        const getDate = p.birthYear.split(\"/\");\r\n        const date = new Date(parseInt(getDate[2]),parseInt(getDate[1])-1,parseInt(getDate[0]));\r\n        years.push(date.getFullYear().toString());\r\n      });\r\n    });\r\n\r\n    let yearsObj = {};\r\n    years.forEach((item) => {\r\n      if (!yearsObj[item]) yearsObj[item] = 0;\r\n      yearsObj[item] += 1;\r\n    });\r\n\r\n    let occurance = [];\r\n    let distinctYear = [];\r\n    for (const year in yearsObj) {\r\n      occurance.push(yearsObj[year]);\r\n      distinctYear.push(year);\r\n    }\r\n    return [distinctYear, occurance];\r\n  }\r\n\r\n  useEffect(() => {\r\n    API.getDiagnosis()\r\n      .then((res) => {\r\n        return getPatientInfoWithDisease(res.data);\r\n      })\r\n      .then(([years, occurance]) => {\r\n        setTimeout(()=>{\r\n          c3.generate({\r\n            bindto: \"#spline\",\r\n            data: {\r\n              columns: [[`Number of ${diseaseName} patients by birth year `].concat(occurance)],\r\n              type: \"spline\",\r\n            },\r\n            axis: {\r\n              x: {\r\n                type: \"category\",\r\n                categories: years,\r\n                label: 'Years'\r\n              },\r\n              y:{\r\n                label: 'Number of Patients'\r\n              }\r\n            },\r\n          });\r\n        },512)\r\n      });\r\n  }, [diseaseName]);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"spline\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineGraph;\r\n","import React, { useEffect } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport c3 from \"c3\";\r\n\r\nconst BarGraph = ({diseaseName}) => {\r\n\r\n  const vic = [\"VIC\"];\r\n  const sa = [\"SA\"];\r\n  const nt = [\"NT\"];\r\n  const nsw = [\"NSW\"];\r\n  const wa = [\"WA\"];\r\n  const tas = [\"TAS\"];\r\n  const act = [\"ACT\"];\r\n\r\n  function getGender(diagnosis) {\r\n\r\n    const diseases = diagnosis.filter(\r\n      (disease) => disease.name.toUpperCase() === diseaseName.toUpperCase()\r\n    );\r\n\r\n\r\n    let VIC = [];\r\n    let SA = [];\r\n    let NT = [];\r\n    let NSW = [];\r\n    let WA = [];\r\n    let ACT = [];\r\n    let TAS = [];\r\n    diseases.map((d) => {\r\n      VIC = d.patients.filter((p) => p.state === vic[0]);\r\n      SA = d.patients.filter((p) => p.state === sa[0]);\r\n      NT = d.patients.filter((p) => p.state === nt[0]);\r\n      NSW = d.patients.filter((p) => p.state === nsw[0]);\r\n      WA = d.patients.filter((p) => p.state === wa[0]);\r\n      ACT = d.patients.filter((p) => p.state === act[0]);\r\n      TAS = d.patients.filter((p) => p.state === tas[0]);\r\n    });\r\n\r\n    return [ACT, TAS, VIC, SA, NT, NSW, WA];\r\n  }\r\n\r\n  useEffect(() => {\r\n    API.getDiagnosis()\r\n      .then((res) => {\r\n        let [ACT, TAS, VIC, SA, NT, NSW, WA] = getGender(res.data);\r\n        vic.push(VIC.length);\r\n        sa.push(SA.length);\r\n        nt.push(NT.length);\r\n        nsw.push(NSW.length);\r\n        wa.push(WA.length);\r\n        tas.push(TAS.length);\r\n        act.push(ACT.length);\r\n        return [act, tas, vic, sa, nt, nsw, wa];\r\n      })\r\n      .then(([act, tas, vic, sa, nt, nsw, wa]) => {\r\n        setTimeout(()=>{\r\n          c3.generate({\r\n            bindto: \"#bar\",\r\n            data: {\r\n              columns: [act, tas, vic, sa, nt, nsw, wa],\r\n              type: \"bar\",\r\n              labels: true,\r\n            },\r\n            axis: {\r\n              x: {\r\n                type: \"category\",\r\n                categories: [\"\"],\r\n              },\r\n            },\r\n            bar: {\r\n              space: 1.9,\r\n              width: {\r\n                ratio: 0.7\r\n              },\r\n            },\r\n          });\r\n        },500);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [diseaseName]);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"bar\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport API from \"../../utils/API\";\r\nconst List = ({ handler }) => {\r\n  const [diseaseName, setDiseaseName] = useState([]);\r\n\r\n  const getDisease = (disease) => {\r\n    let putArray = [];\r\n    disease.map((disease) => putArray.push(disease.name));\r\n    return putArray;\r\n  };\r\n\r\n  useEffect(() => {\r\n    API.getDiagnosis()\r\n      .then((res) => {\r\n        setDiseaseName(getDisease(res.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h4>List of diagnosis</h4>\r\n      </div>\r\n      {diseaseName.map((d, index) => (\r\n        <div\r\n          className=\"bg-light my-2\"\r\n          title=\"click to see the data\"\r\n          id=\"list\"\r\n          key={index}\r\n          onClick={() => handler(d)}\r\n        >\r\n          {d.toUpperCase()}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import react, { useEffect, useState } from \"react\";\r\nimport API from \"../../utils/API\";\r\n\r\nconst DateSelector = ({ dateHandler }) => {\r\n  const [selectDate, setSelectDate] = useState([]);\r\n  const [currentYear, setYear] = useState([]);\r\n  const [todayDate, setTodayDate] = useState(Date.now());\r\n  const entryDate = (patients) => {\r\n    let dateArray = [];\r\n\r\n    patients.map((patient) => {\r\n      const date = new Date(patient.date);\r\n      setYear(date.getFullYear());\r\n      const getYear = `${date.getDate()}/${\r\n        date.getMonth() + 1\r\n      }/${date.getFullYear()}`;\r\n      dateArray.push(getYear.toString());\r\n    });\r\n\r\n    const distinctYear = dateArray.filter((year, index) => {\r\n      return dateArray.indexOf(year) === index;\r\n    });\r\n\r\n    return distinctYear;\r\n  };\r\n\r\n  useEffect(() => {\r\n    API.getPatientData()\r\n      .then((res) => {\r\n        setSelectDate(entryDate(res.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const getTodayDate = ()=>{\r\n    const date = new Date(todayDate);\r\n    return `${date.getDate()}/${\r\n      date.getMonth() + 1\r\n    }/${date.getFullYear()}`;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h3>Current Year: {currentYear}</h3>\r\n      <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm\"\r\n          title=\"click to see the data\"\r\n          // id=\"list\"\r\n        >\r\n          {getTodayDate()}\r\n        </button>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateSelector;\r\n","import React, { useState } from \"react\";\r\nimport TableContainer from \"../TableContainer\";\r\nimport PieChart from \"../PieChart\";\r\nimport LineGraph from \"../LineGraph\";\r\nimport BarGraph from \"../BarGraph\";\r\nimport List from \"../List\";\r\nimport \"./style.css\";\r\nimport DateSelector from \"../DateSelector\";\r\n\r\nconst Main = () => {\r\n  const [diseaseName, setdiseaseName] = useState(\"diabetes\");\r\n  //  const [dateSelect, setDateSelect] = useState(\"\");\r\n  const handleNameChange = (name) => setdiseaseName(name);\r\n  // const dateHandler = (date)=> setDateSelect(date);\r\n  return (\r\n    <main className=\"container\">\r\n      <section className=\"row\">\r\n        <aside className=\"col\">\r\n          <List handler={handleNameChange} />\r\n        </aside>\r\n        <section className=\"col-9\">\r\n        <DateSelector dateHandler={Date.now}/>\r\n          <br />\r\n          <h3> Percentage of male and female {diseaseName} patients</h3>\r\n          <div className=\"row\" id=\"pie\">\r\n            <PieChart diseaseName={diseaseName}/>\r\n          </div>\r\n          <br />\r\n          <h3> Number of {diseaseName} patients in each state</h3>\r\n          <div className=\"row\" id=\"bar\">\r\n            <BarGraph diseaseName={diseaseName} />\r\n          </div>\r\n          <br />\r\n          <h3> Number of {diseaseName} cases by patient birth year</h3>\r\n          <div className=\"row\" id=\"line\">\r\n            <LineGraph diseaseName={diseaseName} />\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <h3> Patients general details</h3>\r\n          <div className=\"row\" id=\"table\">\r\n            <TableContainer />\r\n          </div>\r\n        </section>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"," import React from \"react\";\r\n// import TableContainer from \"../components/TableContainer\";\r\n// import PieChart from \"./../components/PieChart\";\r\n// import LineGraph from \"./../components/LineGraph\";\r\n// import BarGraph from \"./../components/BarGraph\";\r\n// import Input from \"./../components/Input\";\r\n// import List from \"../components/List\";\r\nimport Main from \"../components/Main\";\r\n\r\nconst Dashboard = ()=>{\r\n    return(<Main />);\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n\r\n// const Dashboard = () => {\r\n//     const [diseaseName, setdiseaseName] = useState(\"diabetes\");\r\n//     const handleNameChange = (name) => setdiseaseName(name);\r\n    \r\n//     return (\r\n//         <main className=\"container\">\r\n//             <section className=\"row\">\r\n//                 <aside className=\"col\" style={{ background: \"skyblue\" }}>\r\n//                     <List handler={handleNameChange} />\r\n//                 </aside>\r\n//                 <section className=\"col-9\" style={{ background: \"wheat\" }}>\r\n//                     <div className=\"row\">\r\n//                         <PieChart diseaseName={diseaseName} />\r\n//                         <div className=\"col\">\r\n//                             <BarGraph diseaseName={diseaseName} />\r\n//                         </div>\r\n//                     </div>\r\n//                     <br />\r\n//                     <div className=\"row\">\r\n//                         <div className=\"col\">\r\n//                             <LineGraph diseaseName={diseaseName} />\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className=\"row\">\r\n//                         <TableContainer />\r\n//                     </div>\r\n//                     <br />\r\n//                     <div className=\"row\">\r\n//                         <div className=\"col-12 mx-auto\">\r\n//                             <Input />\r\n//                         </div>\r\n//                     </div>\r\n//                 </section>\r\n//             </section>\r\n//         </main>\r\n//     );\r\n// }\r\n\r\n// export default Dashboard;","import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ submitForm, formType }) => {\r\n  // common states\r\n  const [firstname, setFirstName] = useState(\"\");\r\n  const [lastname, setLastName] = useState(\"\");\r\n\r\n  //drop\r\n\r\n  const [location, setLocations] = useState(\"\");\r\n\r\n  // Patient States\r\n  const [gender, setGender] = useState(\"\");\r\n  const [dob, setDob] = useState(new Date());\r\n  const [region, setRegion] = useState(\"\");\r\n  const [diagnosis, setDiagnosis] = useState(\"\");\r\n\r\n  // Staff States\r\n  const [staffId, setStaffId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [cpassword, setCpassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [errorEmail, setErrorEmail] = useState(\"\");\r\n\r\n  \r\n\r\n  const validate = () => {\r\n    setErrorEmail(\"\");\r\n\r\n    if (email.includes(\"@\") && email.includes(\".\")){ \r\n      return true;}\r\n    else{ \r\n      return false;\r\n    }\r\n  };\r\n\r\n  const inputHandler = (args) => {\r\n    switch (args) {\r\n      case \"firstname\":\r\n        return (e) => {\r\n          e.preventDefault();\r\n          setFirstName(e.target.value);\r\n        };\r\n      case \"lastname\":\r\n        return (e) => {\r\n          e.preventDefault();\r\n          setLastName(e.target.value);\r\n        };\r\n      case \"region\":\r\n        return (e) => {\r\n          e.preventDefault();\r\n          setRegion(e.target.value);\r\n        };\r\n      case \"diagnosis\":\r\n        return (e) => {\r\n          e.preventDefault();\r\n          setDiagnosis(e.target.value);\r\n        };\r\n      case \"password\":\r\n        return (e) => {\r\n          e.preventDefault();\r\n          setPassword(e.target.value);\r\n        };\r\n      case \"email\":\r\n        return (e) => {\r\n          e.preventDefault();\r\n          setEmail(e.target.value);\r\n        };\r\n      case \"staffId\":\r\n        return (e) => {\r\n          e.preventDefault();\r\n          setStaffId(e.target.value);\r\n        };\r\n    }\r\n  };\r\n\r\n  const isPatientFormFilled =\r\n    firstname.length > 0 &&\r\n    lastname.length > 0 &&\r\n    region.length > 0 &&\r\n    diagnosis.length > 0;\r\n\r\n  const isLoginFormFilled = staffId.length > 0 && password.length > 0;\r\n  const isSignupFormFilled =\r\n    password.length > 0 &&\r\n    firstname.length > 0 &&\r\n    staffId.length > 0 &&\r\n    cpassword.length > 0 &&\r\n    email.length > 0 &&\r\n    lastname.length > 0;\r\n\r\n  const getData = () => {\r\n    if (dob) {\r\n      const d = new Date(Date.parse(dob));\r\n      return d.getDate() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getFullYear();\r\n    }\r\n  };\r\n\r\n  if (formType === \"addPatient\") {\r\n    const allValue = {\r\n      firstname: firstname,\r\n      lastname: lastname,\r\n      gender: gender,\r\n      dob: getData(),\r\n      region: region,\r\n      diagnosis: diagnosis,\r\n    };\r\n    return (\r\n      <div id=\"forms\">\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            submitForm(allValue);\r\n            setFirstName(\"\");\r\n            setLastName(\"\");\r\n            setDiagnosis(\"\");\r\n            setDob(\"\");\r\n            setGender(\"\");\r\n            setRegion(\"\");\r\n            setDob(\"\");\r\n          }}\r\n        >\r\n          <h1>Patient Form</h1>\r\n          <small id=\"required\" className=\"form-text text-muted\">\r\n            Every field is *Required\r\n          </small>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"patientFirstName\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              className=\"form-control rounded-0\"\r\n              id=\"patientFirstName\"\r\n              aria-describedby=\"patientFirstName\"\r\n              placeholder=\"Enter First Name\"\r\n              value={firstname}\r\n              onChange={inputHandler(\"firstname\")}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"patientLastName\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              className=\"form-control rounded-0\"\r\n              id=\"patientLastName\"\r\n              aria-describedby=\"patientLastName\"\r\n              placeholder=\"Enter Last Name\"\r\n              value={lastname}\r\n              onChange={inputHandler(\"lastname\")}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"dob\">Date of Birth</label>\r\n            <br />\r\n            <DatePicker\r\n              selected={dob}\r\n              onChange={(date) => setDob(date)}\r\n              isClearable\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              className=\"datePicker\"\r\n              placeholderText=\"click here\"\r\n            />\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"flexRadioDefault\"\r\n              value=\"Male\"\r\n              id=\"flexRadioDefault1\"\r\n              onChange={(e) => {\r\n                e.target.checked\r\n                  ? setGender(e.target.value)\r\n                  : setGender(\"Male\");\r\n              }}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n              Male\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"flexRadioDefault\"\r\n              value=\"Female\"\r\n              id=\"flexRadioDefault2\"\r\n              onChange={(e) => {\r\n                e.target.checked\r\n                  ? setGender(e.target.value)\r\n                  : setGender(\"Female\");\r\n              }}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\">\r\n              Female\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"state\">State</label>\r\n            <select\r\n              className=\"form-select\"\r\n              aria-label=\"Default select example\"\r\n              onChange={inputHandler(\"region\")}\r\n            >\r\n              <option disabled>Select State</option>\r\n              <option value=\"NSW\">New South Wales</option>\r\n              <option value=\"ACT\">Australian Capital Territory</option>\r\n              <option value=\"TAS\">Tasmania</option>\r\n              <option value=\"SA\">South Australia</option>\r\n              <option value=\"WA\">Western Australia</option>\r\n              <option value=\"NT\">Northern Territory</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"diagnosis\" id=\"da\">\r\n              Diagnosis\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              className=\"form-control rounded-0\"\r\n              id=\"diagnosis\"\r\n              aria-describedby=\"diagnosis\"\r\n              placeholder=\"Enter Diagnosis\"\r\n              value={diagnosis}\r\n              onChange={inputHandler(\"diagnosis\")}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!isPatientFormFilled}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  } else if (formType === \"login\") {\r\n    const userLoginObj = {\r\n      staffId: staffId,\r\n      password: password,\r\n    };\r\n    return (\r\n      <div id=\"forms\">\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            submitForm(userLoginObj);\r\n            setPassword(\"\");\r\n            setStaffId(\"\");\r\n          }}\r\n        >\r\n          <h1>Sign In</h1>\r\n          <small id=\"required\" className=\"form-text text-muted\">\r\n            Every field is *Required\r\n          </small>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"staffId\" id=\"da\">\r\n              Staff Id\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              className=\"form-control rounded-0\"\r\n              id=\"staffId\"\r\n              aria-describedby=\"staffId\"\r\n              placeholder=\"Enter staff id\"\r\n              value={staffId}\r\n              onChange={inputHandler(\"staffId\")}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              autoComplete=\"off\"\r\n              className=\"form-control rounded-0\"\r\n              id=\"password\"\r\n              aria-describedby=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={inputHandler(\"password\")}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!isLoginFormFilled}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Sign In\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  } else {\r\n    const userObj = {\r\n      firstname: firstname,\r\n      lastname: lastname,\r\n      staffId: staffId,\r\n      password: password,\r\n      cpassword: cpassword,\r\n      email: email,\r\n    };\r\n    return (\r\n      <div id=\"forms\">\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            if (validate()) {\r\n              submitForm(userObj);\r\n            } else {\r\n              setErrorEmail(\"Please enter valid email\");\r\n            }\r\n            setFirstName(\"\");\r\n            setLastName(\"\");\r\n            setEmail(\"\");\r\n            setCpassword(\"\");\r\n            setPassword(\"\");\r\n            setStaffId(\"\");\r\n          }}\r\n        >\r\n          <h1>Staff Registration</h1>\r\n          <small id=\"required\" className=\"form-text text-muted\">\r\n            Every field is *Required\r\n          </small>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"patientFirstName\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              className=\"form-control rounded-0\"\r\n              id=\"patientFirstName\"\r\n              aria-describedby=\"patientFirstName\"\r\n              placeholder=\"Enter First Name\"\r\n              value={firstname}\r\n              onChange={(e) => {\r\n                setFirstName(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"patientLastName\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              className=\"form-control rounded-0\"\r\n              id=\"patientLastName\"\r\n              aria-describedby=\"patientLastName\"\r\n              placeholder=\"Enter Last Name\"\r\n              value={lastname}\r\n              onChange={(e) => {\r\n                setLastName(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"staffId\" id=\"da\">\r\n              Staff Id\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              className=\"form-control rounded-0\"\r\n              id=\"staffId\"\r\n              aria-describedby=\"staffId\"\r\n              placeholder=\"Enter staff id\"\r\n              value={staffId}\r\n              onChange={(e) => {\r\n                setStaffId(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              className=\"form-control rounded-0\"\r\n              id=\"email\"\r\n              aria-describedby=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n            {errorEmail ? (\r\n              <div style={{ color: \"red\" }}>{errorEmail}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              autoComplete=\"off\"\r\n              className=\"form-control rounded-0\"\r\n              id=\"password\"\r\n              aria-describedby=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"cpassword\" id=\"da\">\r\n              Confrim Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              autoComplete=\"off\"\r\n              className=\"form-control rounded-0\"\r\n              id=\"cpassword\"\r\n              aria-describedby=\"cpassword\"\r\n              placeholder=\"Enter confirm password\"\r\n              value={cpassword}\r\n              onChange={(e) => {\r\n                setCpassword(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!isSignupFormFilled}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Sign Up\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Form;\r\n","import React, { useContext, useState } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Form from \"../components/Form\";\r\nimport { UserContext } from \"../App\";\r\n\r\nconst Login = () => {\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const history = useHistory();\r\n    const [value, setValue] = useState(\"\");\r\n    const submitForm = (val) => {\r\n        API.signIn(val).then(res => {\r\n            dispatch({ type: \"USER\", payload: res.data.token });\r\n            localStorage.setItem(\"token\", res.data.token);\r\n            setValue(\"\");\r\n            history.push(\"/\");\r\n        }).catch(err => {\r\n            if (err.response.status === 400) {\r\n                setValue(\"Invalid\");\r\n                history.push(\"/login\");\r\n            }\r\n        })\r\n    };\r\n    return (<div >\r\n        <Form submitForm={submitForm} formType=\"login\" />\r\n        {value ? <h5 style={{ color: \"red\", textAlign: \"center\", marginTop:\"10px\" }}>\r\n            Invalid credential! Please Sign in with valid id and password\r\n    </h5> : null}\r\n    </div>);\r\n}\r\n\r\nexport default Login;","import React, { useEffect, useState } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Form from \"./../components/Form\";\r\nimport {useHistory} from \"react-router-dom\";\r\nconst AddPatientInfo = () => {\r\n  const [value, setValue] = useState([]);\r\n  const [data, setData] = useState({});\r\n  const history = useHistory();\r\n  \r\n  const callAddPateintPage = async () => {\r\n    try {\r\n      const responseFromBackend = await API.getAddPatient();\r\n      if(responseFromBackend.status !== 200) throw new Error(\"Not verfied\");\r\n      history.push(\"/addInformation\");\r\n    } catch (error) { \r\n        console.log(error.response.status, \"HEY GO TO LOGIN\");\r\n        history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    callAddPateintPage();\r\n    API.userDetail().then(res=>{\r\n      setData(res.data.token);\r\n    });\r\n  },[]);\r\n\r\n  const submitForm = (val) => {\r\n    API.savePatientInfo(val, data).then(res => {\r\n      console.log(\"saved\");\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n    setValue(val);\r\n  };\r\n\r\n  return (<div >\r\n    <Form submitForm={submitForm} formType=\"addPatient\" />\r\n    {\r\n      value.length !== 0 ? <div></div> : null\r\n    }\r\n  </div>);\r\n}\r\n\r\nexport default AddPatientInfo;","import React, { useState } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Form from \"./../components/Form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Registration = () => {\r\n  const history = useHistory();\r\n  const [value, setValue] = useState(\"\");\r\n  const submitForm = (val) => {\r\n    API.saveStaffInfo(val).then(res => {\r\n      console.log(\"saved\");\r\n      setValue(\"\");\r\n      history.push(\"/login\");\r\n    }).catch(err => {\r\n      if(err.response.status === 422){\r\n        setValue(\"Already Exist\");\r\n        history.push(\"/registration\");\r\n      }\r\n    })\r\n\r\n  };\r\n  return (<div >\r\n    <Form submitForm={submitForm} formType=\"registration\"/>\r\n    {value?<h5 style={{color:\"red\", textAlign:\"center\", marginTop:\"10px\"}}>\r\n      User already Exist!\r\n    </h5>:null}\r\n\r\n  </div>);\r\n}\r\n\r\nexport default Registration;","export const initialState = {token:null}; \r\nexport const reducer = (state = initialState, action)=>{\r\n    if(action.type === \"USER\")\r\n        return {...state, token:action.payload};\r\n    return state;\r\n} ","import React, { createContext, useReducer } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Nav from \"./components/Nav\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Login from \"./pages/Login\";\nimport AddPatientInfo from \"./pages/AddPatientInfo\";\nimport Registration from \"./pages/Registration\";\nimport {initialState, reducer} from \"./reducer/UseReducer\";\n\nimport 'c3/c3.css';\n\nexport const UserContext = createContext();\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <div>\n      <UserContext.Provider value={{state, dispatch}}>\n      <Router>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard}/>\n        <Route exact path=\"/login\" component={Login}/>\n        <Route exact path=\"/addInformation\" component={AddPatientInfo}/>\n        <Route exact path=\"/registration\" component={Registration}/>\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n    </UserContext.Provider>\n    </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}